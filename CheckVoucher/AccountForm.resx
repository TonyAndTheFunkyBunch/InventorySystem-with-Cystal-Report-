<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Il7NvAAAAABJRU5ErkJggg==
</value>
  </data>
</root>